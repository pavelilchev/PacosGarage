@model ChangePasswordViewModel
@{
    ViewData["Title"] = "Change password";
    ViewData.AddActivePage(ManageNavPages.ChangePassword);
}

<h4>@ViewData["Title"]</h4>
@Html.Partial("_StatusMessage", Model.StatusMessage)
<div class="form">
    <form method="post">
        <div class="form-group">
            <label asp-for="OldPassword"></label>
            <input asp-for="OldPassword" class="form-control" />
            <span asp-validation-for="OldPassword" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="NewPassword"></label>
            <input asp-for="NewPassword" class="form-control" />
            <span asp-validation-for="NewPassword" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ConfirmPassword"></label>
            <input asp-for="ConfirmPassword" class="form-control" />
            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        </div>
        @if (!ViewData.ModelState.IsValid)
        {
            <div asp-validation-summary="All" class="alert alert-danger"></div>
        }
        <button type="submit" class="btn btn-default">Update password</button>
    </form>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
